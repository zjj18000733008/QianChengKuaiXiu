<?xml version="1.0" encoding="UTF-8" ?>
<beans  xmlns="http://www.springframework.org/schema/beans"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xmlns:context="http://www.springframework.org/schema/context"
        xmlns:aop="http://www.springframework.org/schema/aop"
        xmlns:tx="http://www.springframework.org/schema/tx"
        xmlns:security="http://www.springframework.org/schema/security"
        xsi:schemaLocation="http://www.springframework.org/schema/beans
http://www.springframework.org/schema/beans/spring-beans.xsd
http://www.springframework.org/schema/context
http://www.springframework.org/schema/context/spring-context.xsd
http://www.springframework.org/schema/aop
http://www.springframework.org/schema/aop/spring-aop.xsd
http://www.springframework.org/schema/tx
http://www.springframework.org/schema/tx/spring-tx.xsd http://www.springframework.org/schema/security
http://www.springframework.org/schema/security/spring-security.xsd">

    <!--释放无需经过springsecurity过滤器的静态资源-->
    <security:http pattern="/css/**" security="none"/>
    <security:http pattern="/img/**" security="none"/>
    <security:http pattern="/plugins/**" security="none"/>
    <security:http pattern="/failer.jsp" security="none"/>
    <security:http pattern="/favicon.ico" security="none"/>

    <!--设置可以用spring的el表达式配置审批人能够security并自动生成对应配置组件-->
    <security:http auto-config="true" use-expressions="true">
        <!--指定login.jsp可以被匿名访问-->
        <security:intercept-url pattern="/login.jsp" access="permitAll()"/>
        <security:intercept-url pattern="/login" access="permitAll()"/>
        <security:intercept-url pattern="/user/login" access="permitAll()"/>
        <security:intercept-url pattern="/product/query" access="permitAll()"/>
        <security:intercept-url pattern="/product/queryWithPriceRange" access="permitAll()"/>
        <security:intercept-url pattern="/product/getById" access="permitAll()"/>
        <security:intercept-url pattern="/user/getUserPhone" access="permitAll()"/>
        <security:intercept-url pattern="/concretType" access="permitAll()"/>
        <security:intercept-url pattern="/secondType" access="permitAll()"/>
        <security:intercept-url pattern="/homepage/picture/queryAll" access="permitAll()"/>
        <security:intercept-url pattern="/pay/callback" access="permitAll()"/>
        <security:intercept-url pattern="/type" access="permitAll()"/>
        <security:intercept-url pattern="/repair/brand/query" access="permitAll()"/>
        <security:intercept-url pattern="/repair/brand/get" access="permitAll()"/>
        <security:intercept-url pattern="/repair/electricAppliance/get" access="permitAll()"/>
        <security:intercept-url pattern="/repair/electricAppliance/query" access="permitAll()"/>
        <security:intercept-url pattern="/repair/malfunction/query" access="permitAll()"/>
        <security:intercept-url pattern="/repair/malfunction/get" access="permitAll()"/>
        <security:intercept-url pattern="/repair/malfunctionItem/get" access="permitAll()"/>
        <security:intercept-url pattern="/repair/malfunctionItem/query" access="permitAll()"/>
        <security:intercept-url pattern="/repair/model/query" access="permitAll()"/>
        <security:intercept-url pattern="/repair/model/get" access="permitAll()"/>
        <security:intercept-url pattern="/article/get" access="permitAll()"/>
        <security:intercept-url pattern="/article/queryAll" access="permitAll()"/>
        <security:intercept-url pattern="/article/getById" access="permitAll()"/>
        <security:intercept-url pattern="/merchant/queryAll" access="permitAll()"/>
        <security:intercept-url pattern="/merchant/get" access="permitAll()"/>


        <!--使用spring的el表达式来指定项目所有资源访问都必须有ROLE_USER或ROLE_ADMIN角色-->
        <security:intercept-url pattern="/**" access="hasAnyRole('ROLE_USER','ROLE_ADMIN','ROLE_STAFF')"/>
        <!--指定自定义的认证页面-->
        <security:form-login login-page="/login.jsp"
                             login-processing-url="/login"
                             default-target-url="/index.jsp"
                             authentication-failure-url="/failer.jsp" />
        <!--指定退出登录后跳转的页面-->
        <security:logout logout-url="/logout"
                         logout-success-url="/login.jsp"/>
        <!--禁用csrf防护机制-->
        <security:csrf disabled="true"/>
        <!--403异常处理-->
        <security:access-denied-handler error-page="/403.jsp"/>
    </security:http>

    <!--加密对象-->
    <bean id="passwordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"/>
    <!--设置spring security认证用户信息的来源-->
    <security:authentication-manager>
        <security:authentication-provider user-service-ref="staffServiceImpl"><!--这里可以指定使用哪个UserDetailService的实现类-->
            <!--手动设置了一个对象-->
<!--            <security:user-service>-->
<!--                <security:user name="user" password="{noop}user" authorities="ROLE_USER"/>-->
<!--            </security:user-service>-->
            <!--指定认证使用的加密对象-->
            <security:password-encoder ref="passwordEncoder"/>
        </security:authentication-provider>
    </security:authentication-manager>
</beans>
